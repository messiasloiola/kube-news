apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kube-news.name" . }}-postgres
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "kube-news.name" . }}-postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kube-news.name" . }}-postgres
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kube-news.name" . }}-postgres
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kube-news.name" . }}-config
                  key: DB_DATABASE
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "kube-news.name" . }}-config
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.existingSecret }}
                  key: postgres-password
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
      volumes:
        - name: postgres-storage
          {{- if .Values.postgres.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "kube-news.name" . }}-postgres-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}